/* STYLES -
 *
 */

/* CHANGELOG
 * Written by Josh Grooms on 20151012
 */



/* DEBUG - Styles elements with highly visible colors for easier debugging. */
debug()
    border:             1px solid Red;
    background-color:   Blue;
    background-image:   none;
    color:              Green;
/* DEEP-INSET - Styles elements to appear as if they were deeply sunken into their parent container. */
deep-inset()
    bevel:              1px inset normal;
    background-color:   shadow-color(light, faded);
    box-shadow:         inset 0.5px 1px 2px shadow-color(normal, normal);
/* DEEPER-INSET - Styles elements to appear as if they were very deeply sunken into their parent container. */
deeper-inset()
    bevel:              1px inset normal;
    background-color:   shadow-color(light, semifaded);
    shadow:             5px inset normal normal;
/* DEEP-OUTSET - Styles elements to appear as if they were raised high above their parent container. */
deep-outset()
    bevel:              1px outset lighter;
    background-color:   gloss-color(normal, normal);
    box-shadow:         0px 0px 0px 1px #292929,
                        -1px -1px 0px shadow-color(lighter, semiopaque),
                        3px 3px 5px shadow-color(normal, faded);
/* FLAT - Styles elements to appear completely flat and merged with their parent container. */
flat()
    background-color:   transparent;
    background-image:   none;
    border:             none;
    box-shadow:         none;

icon(source)
    -gtk-icon-source: url(source);

/* SHADOW - Sets a standardized box shadow style for any widget class or selector.
 *
 *  SYNTAX:
 *      shadow:     size
 *      shadow:     size direction
 *      shadow:     size direction strength
 *      shadow:     size direction strength opacity
 *
 *  INPUT:
 *      size:       PX or EM
 *
 *      direction:  OPTION
 *
 *      strength:   OPTION
 *
 *      opacity:    OPTION
 *
 */
shadow(size, direction = outset, strength = normal, opacity = normal)
    if (direction == inset)
        box-shadow:        inset size size size (- size) shadow-color(strength, opacity);
    else
        box-shadow:        size size size (- size) shadow-color(strength, opacity);
/* SHALLOW-INSET - Styles elements to appear as if they were slightly sunken into their parent container. */
shallow-inset()
    bevel:              1px inset lighter;
    background-color:   shadow-color(lighter, faded);
    box-shadow:         inset 0.5px 1px 2px shadow-color(normal, semifaded);
/* SHALLOW-OUTSET - Styles elements to appear as if they were slightly raised above their parent container. */
shallow-outset()
    bevel:              1px outset gloss-color(normal, faded) shadow-color(lighter, semifaded);
    background-color:   gloss-color(darker, faded);

/* BEVEL - Sets border parameters to resemble an inset or outset bevel.
 *
 *  SYNTAX:
 *      bevel: size
 *      bevel: size direction
 *      bevel: size direction strength
 *      bevel: size direction strength opacity
 *      bevel: size direction topLeftColor bottomRightColor
 *
 *  INPUTS
 *      size:               PX or EM
 *                          The thickness of the border that creates the beveled effect. Larger sizes create thicker borders
 *                          that can create the illusion of additional depth.
 *
 *  OPTIONAL INPUTS:
 *      direction:          OPTION
 *                          Dictates whether the element being styled should appear sunken into or raised above its parent
 *                          container. More specifically, this argument controls to which borders light and dark colors are
 *                          assigned in order to create the effect. 'Inset' bevels assign dark colors to the top and left
 *                          borders while 'outset' bevels assign them to the bottom and right ones.
 *                          OPTIONS:
 *                              inset   - Results in a 'sunken down' effect.
 *                              outset  - Results in a 'raised above' effect.
 *
 *      strength:           OPTION
 *                          Dictates the lightness or darkness of the border colors automatically generated by this function.
 *                          This argument is eventually used with the Stylus functions 'lighten' and 'darken' in order to
 *                          adjust these colors.
 *                          OPTIONS:
 *                              darker      - Darken by 14.29%
 *                              dark        - Darken by 9.52%
 *                              semidark    - Darken by 4.76%
 *                              normal      - No lightening or darkening of colors
 *                              semilight   - Lighten by 4.76%
 *                              light       - Lighten by 9.52%
 *                              lighter     - Lighten by 14.29%
 *
 *      opacity:            OPTION
 *                          Dictates the opacity of the border colors automatically generated by this function. This argument
 *                          directly determines the alpha channel value of these colors.
 *                          OPTIONS:
 *                              semiopaque      - 87.5% opacity
 *                              translucent     - 75% opacity
 *                              semitranslucent - 62.5% opacity
 *                              normal          - 50% opacity
 *                              semifaded       - 37.5% opacity
 *                              faded           - 25% opacity
 *                              semitransparent - 12.5% opacity
 *
 *      topLeftColor:       HEX or HSL or RGB or RGBA
 *                          A manually specified color value that will be assigned to the top and left borders of the element
 *                          that is being styled.
 *
 *      bottomRightColor:   RGBA
 *                          A manually specified color value that will be assigned to the bottom and right borders of the
 *                          element that is being styled.
 */
bevel(size, direction = outset, strength = normal, opacity = semitransparent)

    if (iscolor(strength))
        c1 = strength;
        c2 = opacity;
    else if (direction == inset)
        c1 = shadow-color(strength, opacity);
        c2 = gloss-color(strength, opacity);
    else
        c1 = gloss-color(strength, opacity);
        c2 = shadow-color(strength, opacity);

    background-clip:        (direction == inset) ? padding-box : border-box;
    border-color:           c1;
    border-bottom-color:    c2;
    border-right-color:     c2;
    border-style:           solid;
    border-width:           size;
